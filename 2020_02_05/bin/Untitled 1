1 2020_02_04 수업중 리뷰

 1]예외
  1.명령어에 의해 구분 
    1)발생 : throw - Exception 유발
        내가 생각하는 예외 조건이 맞다면?
      throw new Exception("message");

    2)떠넘길수 : throws --> 메소드 선언시 
    -   접근자     리턴자료형   메소드명(매개변수가자료형 매개변수)throws Exception클래스들{ } //명시된 것
    ex. public  void 	main()throws Exception
    
    3)처리 : try - catch - finally 사용
    
    
  2. 메소드 내부에서 사용
//////////
 *Runtime에 의해 발생하는 exception인가? 에 따른 구분 
  unchecked : 실행해 봐야 아는 예외 
  checked : 명시된 예외
  - runtime e로 파생되지 않으면 다 checked 
/////////////

				접근유형    class  클래스명(~~Exception)  extends  Exception{ }
				
			ex. public class FoolException extends Exception {   }
			
			
////////////////////////////////
	Override 시 주의할 점
	  부모 클래스의 메소드에 throws ~~~Exception { }
	    자식 클래스에서 오버라이드 하는 메소드에 쓸 throws 규칙
	      1. 똑같이한다
	      2. 생략한다  둘중 하나 
	       ~~~Exception의 기초클래스???
	       ~~~Exception의 서브클래스???
	      
		기초 클래스의 메소드가 throws가 없으면 쓸 수 없다.
		기초 클래스가 throws를 가지고 있으면 throws 뒤가 동일하던가
		하위 클래스에서 overriding 할때 생략하던가 
		why) sub에서 기초가 갖고있는 것을 구체화 시키는 것이 override 
		
///////
			
			
			
			
  